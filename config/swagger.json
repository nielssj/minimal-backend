{
  "swagger": "2.0",
  "info": {
    "title": "Minimal backend",
    "description": "A minimal monolithic example backend",
    "version": "1.0.0"
  },
  "host": "api.minimal-backend.com",
  "schemes": [
    "https"
  ],
  "basePath": "/",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/user": {
      "post": {
        "summary": "Create user",
        "description": "Create a new user account with provided credentials",
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "description": "User credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCredentials"
            }
          }
        ],
        "tags": [
          "Authentication"
        ],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Log in",
        "description": "Produce authentication token to be presented in order to access restricted data",
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "description": "User credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCredentials"
            }
          }
        ],
        "tags": [
          "Authentication"
        ],
        "responses": {
          "200": {
            "description": "Authentication token",
            "schema": {
              "$ref": "#/definitions/AuthenticationToken"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/transaction": {
      "post": {
        "summary": "Create transaction",
        "description": "Create a new financial transaction",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorized token",
            "required": true,
            "type": "string"
          },
          {
            "name": "transaction",
            "in": "body",
            "description": "New transaction",
            "required": true,
            "schema": {
              "type" : "object",
              "additionalProperties": false,
              "properties" : {
                "title" : {
                  "type" : "string"
                },
                "amount" : {
                  "type" : "number"
                },
                "description" : {
                  "type" : "string"
                }
              },
              "required": ["title", "amount"]
            }
          }
        ],
        "tags": [
          "Transaction"
        ],
        "responses": {
          "200": {
            "description": "Resulting transaction",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "$input.body"
          },
          "uri": "arn:aws:apigateway:<<region>>:lambda:path/2015-03-31/functions/arn:aws:lambda:<<region>>:<<accountId>>:function:${stageVariables.CreateTransactionName}/invocations",
          "passthroughBehavior": "never",
          "httpMethod": "POST",
          "type": "aws"
        }
      },
      "get": {
        "summary": "Get transactions",
        "description": "Retrieve all transaction belonging to user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorized token",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Transaction"
        ],
        "responses": {
          "200": {
            "description": "List of transactions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Transaction"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{}"
          },
          "uri": "arn:aws:apigateway:<<region>>:lambda:path/2015-03-31/functions/arn:aws:lambda:<<region>>:<<accountId>>:function:${stageVariables.GetAllTransactionsName}/invocations",
          "passthroughBehavior": "never",
          "httpMethod": "POST",
          "type": "aws"
        }
      }
    },
    "/transaction/{id}": {
      "get": {
        "summary": "Get transaction",
        "description": "Retrieve specific transaction based on id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of transaction to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorized token",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Transaction"
        ],
        "responses": {
          "200": {
            "description": "Transaction with given id",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "summary": "Update transaction",
        "description": "Patch the transaction with the given id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of transaction to be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorized token",
            "required": true,
            "type": "string"
          },
          {
            "name": "patch",
            "in": "body",
            "description": "Object containing keys to be updated and their new values",
            "required": true,
            "schema": {
              "type" : "object",
              "additionalProperties": false,
              "properties" : {
                "authorUserId": {
                  "type": "string",
                  "example": "a0e5f29a-d874-4d1a-b81e-bc16e5539a32"
                },
                "title" : {
                  "type" : "string",
                  "example": "Super Market corp"
                },
                "amount" : {
                  "type" : "number",
                  "example": 10
                },
                "description" : {
                  "type" : "string",
                  "example": "Groceries for cooking"
                }
              }
            }
          }
        ],
        "tags": [
          "Transaction"
        ],
        "responses": {
          "200": {
            "description": "Resulting transaction",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete transaction",
        "description": "Delete specific transaction based on id",
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "Id of transaction to be retrieved",
          "required": true,
          "type": "string"
        },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorized token",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Transaction"
        ],
        "responses": {
          "200": {
            "description": "Deleted transaction",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "UserCredentials": {
      "type" : "object",
      "additionalProperties": false,
      "properties" : {
        "email" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      },
      "required": ["email", "password"]
    },
    "AuthenticationToken": {
      "type" : "object",
      "additionalProperties": false,
      "properties" : {
        "token" : {
          "type" : "string"
        }
      },
      "required": ["token"]
    },
    "Transaction": {
      "description" : "A financial transaction of a given amount of currency",
      "type" : "object",
      "additionalProperties": false,
      "properties" : {
        "id": {
          "type" : "string"
        },
        "authorUserId": {
          "type": "string"
        },
        "title" : {
          "type" : "string"
        },
        "amount" : {
          "type" : "number"
        },
        "description" : {
          "type" : "string"
        },
        "created": {
          "type": "string"
        },
        "updated": {
          "type": "string"
        }
      },
      "required": ["id", "authorUserId", "title", "amount"]
    },
    "Error": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    }
  },
  "x-amazon-apigateway-request-validators": {
    "all": {
      "validateRequestParameters": true,
      "validateRequestBody": true
    }
  }
}